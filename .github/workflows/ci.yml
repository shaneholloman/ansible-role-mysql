---
name: CI
'on':
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
  schedule:
    - cron: "0 1 * * 3"

defaults:
  run:
    working-directory: 'shaneholloman.mysql'

jobs:

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v4
        with:
          path: 'shaneholloman.mysql'

      - name: Set up Python 3.
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install test dependencies.
        run: pip3 install yamllint

      - name: Lint code.
        run: |
          yamllint .

  molecule:
    name: Molecule
    runs-on: ubuntu-latest
    strategy:
      matrix:
        distro:
          - rockylinux8
          - rockylinux9
          - ubuntu2204
          - ubuntu2004
          - debian12
          - debian11

    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v4
        with:
          path: 'shaneholloman.mysql'

      - name: Set up Python 3.
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install test dependencies.
        run: pip3 install ansible molecule molecule-plugins[docker] docker

      # See: https://github.com/shaneholloman/ansible-role-mysql/issues/422
      - name: Disable AppArmor on Debian.
        run: |
            set -x
            sudo apt-get install apparmor-profiles
            sudo ln -s /etc/apparmor.d/usr.sbin.mysqld /etc/apparmor.d/disable/
            sudo apparmor_parser -R /etc/apparmor.d/usr.sbin.mysqld
        if: ${{ startsWith(matrix.distro, 'debian') }}

      - name: Run Molecule tests.
        run: molecule test
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          MOLECULE_DISTRO: ${{ matrix.distro }}
